#include <iostream>
#include <string>
#include<vector>
#include <time.h>

using namespace std;

//Текстовые функции
void Hello(const vector<int>& map) {
	cout << "************************************************************\n"
		<< "*                     И Г Р А    Н И М                     *\n"
		<< "*     Вы можете взять любое число фишек из любого ряда     *\n"
		<< "*       Выигрывает тот, кто возьмет последнюю фишку.       *\n"
		<< "* Номер ряда                                  Кол-во фишек *\n";
	for (int i = 0; i < map.size(); ++i) {
			cout << "*      " << i+1 << "                                            " << map[i] << "       *\n";
	} // Выводим по отдельности индекс и кол-во фишек в строке
	cout << "*      Введите ваш ход в формате РЯД КОЛИЧ (например,      *\n"
		<< "*              2 3 - взять из 2 ряда 3 фишки)              *\n"
		<< "*            Или введите 0 0 для выхода из игры            *\n"
		<< "************************************************************\n"
		<< "Ваш ход:\n";
}

void Win() {
	cout << "************************************************************\n"
		<< "*                       Вы выиграли!                       *\n"
		<< "*                 Чтобы начать новую игру,                 *\n"
		<< "*             введите настройки игры в формате             *\n"
		<< "*   КОЛИЧЕСТВО_СТРОК    КОЛИЧЕСТВО_ФИШЕК_В_ПЕРВОЙ_СТРОКЕ   *\n"
		<< "*            Или введите 0 0 для выхода из игры            *\n"
		<< "************************************************************\n"
		<< "Ожидание ввода:\n";
}

void Lose() {
	cout << "************************************************************\n"
		<< "*                      Вы проиграли!                       *\n"
		<< "*                 Чтобы начать новую игру,                 *\n"
		<< "*             Введите настройки игры в формате             *\n"
		<< "*   КОЛИЧЕСТВО_СТРОК    КОЛИЧЕСТВО_ФИШЕК_В_ПЕРВОЙ_СТРОКЕ   *\n"
		<< "*            Или введите 0 0 для выхода из игры            *\n"
		<< "************************************************************\n"
		<< "Ожидание ввода:\n";
}

// Функциональныe функции
vector<int> Moving(vector<int>& map, int start) {
	for (int Moving = start; Moving < map.size() - 1; ++Moving) {
		map[Moving] == map[Moving + 1];
	} // Двигаем весь массив, если строка оказалась пуста
	map.pop_back();
	return map;
}

//Функции мувов
vector<int> Player_move(vector<int>& map, int MoveRow, int MoveCum) {
	if (map[MoveRow] < MoveCum) {
		cout << "Неправильный ввод!";
	}
	else if (map[MoveRow] == MoveCum) {
		Moving(map, MoveRow);
	}
	else {
		map[MoveRow] -= MoveCum;
	}
	return map;
}

vector<int> Bot_move(vector<int>& map) {
	int Nim_Num = 0, losei = 0, losej = 0;
	for (int i = 0; i < map.size(); ++i) {
		for (int j = 0; j < map[i]; ++j) { // Выбор мува - i строка, j - кол-во забираемых
			Nim_Num = 0;
			for (int k : map) {
				Nim_Num ^= k;
			}
			if (Nim_Num == 0) { // Если нашёлся стратегический мув
				if (map[i] == j) {
					Moving(map, i);
				}
				else {
					map[i] -= j;
				}
				return map;
			}
		}
	} // Если выигрышный мув не нашелся
	losei = rand() % map.size(); // Случайная строка
	losej = rand() % map[losei]; // Случайное число фишек
	if (map[losei] == losej) {
		Moving(map, losei);
	}
	else {
		map[losei] -= losej;
	} // Случайный мув
	
}

//Начало
int main() {
	srand(time(NULL));
	vector<int> map{ 3,4,5 };
	
	Hello(map);
	
	int MoveRow, MoveCum;
	cin >> MoveRow >> MoveCum;
	while ((MoveRow != 0) && (MoveCum != 0)) {
		Player_move(map, MoveRow, MoveCum);
		if (map.empty()) {
			Win();
		}
		Bot_move(map);
		if (map.empty()) {
			Lose();
		}
		Hello(map);
	}
}
